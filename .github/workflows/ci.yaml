name: ci

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  upstream-docker:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Enable buildkit cache
        uses: actions/cache@v2
        with:
          path: /tmp/buildkit-cache/buildkit-state.tar
          key: ${{ runner.os }}-buildkit-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-
      - name: Load buildkit state from cache
        uses: dashevo/gh-action-cache-buildkit-state@v1
        with:
          builder: buildx_buildkit_${{ steps.buildx.outputs.name }}0
          cache-path: /tmp/buildkit-cache
          cache-max-size: 2g
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: REPO=superspreader
          push: true
          target: upstream
          tags: ghcr.io/kestrel-labs/superspreader:upstream
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deployment-docker:
    runs-on: ubuntu-22.04
    needs:
      - upstream-docker
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set Docker Tag (for pull request)
        if: github.event_name == 'pull_request'
        run: echo "DEPLOY_TAG=${{ github.event.number }}" >> $GITHUB_ENV
      - name: Set Docker Tag (for push)
        if: github.event_name != 'pull_request'
        run: echo "DEPLOY_TAG=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Enable buildkit cache
        uses: actions/cache@v2
        with:
          path: /tmp/buildkit-cache/buildkit-state.tar
          key: ${{ runner.os }}-buildkit-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-
      - name: Load buildkit state from cache
        uses: dashevo/gh-action-cache-buildkit-state@v1
        with:
          builder: buildx_buildkit_${{ steps.buildx.outputs.name }}0
          cache-path: /tmp/buildkit-cache
          cache-max-size: 2g
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          target: deployment
          tags: ghcr.io/kestrel-labs/superspreader:deployment-${{ env.DEPLOY_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  linting-docker:
    runs-on: ubuntu-22.04
    needs:
      - upstream-docker
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set Docker Tag (for pull request)
        if: github.event_name == 'pull_request'
        run: echo "DEPLOY_TAG=${{ github.event.number }}" >> $GITHUB_ENV
      - name: Set Docker Tag (for push)
        if: github.event_name != 'pull_request'
        run: echo "DEPLOY_TAG=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Enable buildkit cache
        uses: actions/cache@v2
        with:
          path: /tmp/buildkit-cache/buildkit-state.tar
          key: ${{ runner.os }}-buildkit-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-
      - name: Load buildkit state from cache
        uses: dashevo/gh-action-cache-buildkit-state@v1
        with:
          builder: buildx_buildkit_${{ steps.buildx.outputs.name }}0
          cache-path: /tmp/buildkit-cache
          cache-max-size: 2g
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          target: linting
          tags: ghcr.io/kestrel-labs/superspreader:linting-${{ env.DEPLOY_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  development-docker:
    runs-on: ubuntu-22.04
    needs:
      - linting-docker
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set Docker Tag (for pull request)
        if: github.event_name == 'pull_request'
        run: echo "DEPLOY_TAG=${{ github.event.number }}" >> $GITHUB_ENV
      - name: Set Docker Tag (for push)
        if: github.event_name != 'pull_request'
        run: echo "DEPLOY_TAG=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Enable buildkit cache
        uses: actions/cache@v2
        with:
          path: /tmp/buildkit-cache/buildkit-state.tar
          key: ${{ runner.os }}-buildkit-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-
      - name: Load buildkit state from cache
        uses: dashevo/gh-action-cache-buildkit-state@v1
        with:
          builder: buildx_buildkit_${{ steps.buildx.outputs.name }}0
          cache-path: /tmp/buildkit-cache
          cache-max-size: 2g
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            USER=username
            UID=1000
            GID=1000
          push: true
          target: development
          tags: ghcr.io/kestrel-labs/superspreader:development-${{ env.DEPLOY_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
